{"version":3,"sources":["Components/BarChart.jsx","Components/SocialBarChart.jsx","Components/LineChart.jsx","Components/FinanceChart.jsx","Components/SalesChart.jsx","Components/OffersChart.jsx","Components/Clock.jsx","App.js","reportWebVitals.js","index.js"],"names":["BarChart","data","padding","scale","value","formatter","val","week","autoFit","interactions","filter","adjust","type","marginRatio","color","position","shared","start","SocialBarChart","LineChart","alias","min","max","tickInterval","value1","area","shape","size","point","name","title","showCrosshairs","items","className","style","marginLeft","FinanceChart","sync","nice","month","acc","rest","SalesChart","OffersChart","Clock","React","useState","Date","date","setDate","useEffect","timerID","setInterval","clearInterval","Intl","DateTimeFormat","hour","minute","second","hour12","format","weekday","day","year","oneJan","getFullYear","numberOfDays","Math","floor","ceil","getDay","currentWeek","document","App","sheet","setSheet","overallAvg","setOverallAvg","foll","posts","insta","setInsta","linked","setLinked","diffData","setDiffData","finance","setFinance","newLastWeek","setNewLastWeek","sales","setSales","offers","setOffers","fetchFromSheets","fetch","then","response","json","weeksBehind","datasets","valueRanges","values","forEach","e","i","length","l","push","parseFloat","avg","instaFoll","instaPost","linkedFoll","linkedPost","console","log","instaNewFollPosts","parseInt","linkedNewFollPosts","wins","fetchFromInstagram","graphql","user","edge_followed_by","count","edge_owner_to_timeline_media","interval","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3411ea61.chunk.js","sourcesContent":["import React from 'react'\r\nimport {\r\n  Chart,\r\n  Tooltip,\r\n  Interval,\r\n  Slider,\r\n  LineAdvance\r\n\r\n} from \"bizcharts\";\r\n\r\nexport const BarChart = ({ data }) => {\r\n\r\n  const scale = {\r\n    value: {\r\n      formatter: function (val) {\r\n        return val + \"%\";\r\n      }\r\n    },\r\n    week:{ formatter: function (val){return \"Week \" + val;}}\r\n  }\r\n\r\n  return (\r\n    <Chart padding=\"auto\" scale={scale} data={data} autoFit interactions={['active-region']} filter={[\r\n      ['value', val => val > 0.1]]} >\r\n      <Interval\r\n        adjust={[\r\n          {\r\n            type: 'dodge',\r\n            marginRatio: 0,\r\n          },\r\n        ]}\r\n        color=\"name\"\r\n        position=\"week*value\"\r\n\r\n      />\r\n      <Tooltip shared scale={{week:{ formatter: function (val){return \"Week\" + val;}}}} />\r\n      <Slider start={0.3} padding={[5, 15, 5, 5]} data={[1]}/>\r\n\r\n    </Chart>\r\n\r\n  )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport {\r\n  Chart,\r\n  Tooltip,\r\n  Interval,\r\n  Slider,\r\n} from \"bizcharts\";\r\n\r\nexport const SocialBarChart = ({ data }) => {\r\n\r\n\r\n  return (\r\n    <Chart padding=\"auto\" data={data} autoFit interactions={['active-region']} >\r\n      <Interval\r\n        adjust={[\r\n          {\r\n            type: 'dodge',\r\n            marginRatio: 0,\r\n          },\r\n        ]}\r\n        color=\"name\"\r\n        position=\"week*value\"\r\n\r\n      />\r\n      <Tooltip shared scale={{week:{ formatter: function (val){return \"Week\" + val;}}}} />\r\n      <Slider start={0.5} padding={[5, 15, 5, 5]} />\r\n\r\n    </Chart>\r\n\r\n  )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport {\r\n  Chart,\r\n  Tooltip,\r\n  Axis,\r\n  Slider,\r\n  LineAdvance,\r\n  View,\r\n  Point\r\n} from \"bizcharts\";\r\n\r\nexport const LineChart = ({ data }) => {\r\n\r\n  const scale = {\r\n    value: {\r\n      alias: \"Average IR\",\r\n      min: 0,\r\n      max: 100,\r\n      formatter: function (val) {\r\n        return val + \"%\";\r\n      },\r\n      tickInterval: 5,\r\n    },\r\n    value1: {\r\n      alias: \"Average IR\",\r\n      min: 0,\r\n      max: 100,\r\n      formatter: function (val) {\r\n        return val + \"%\";\r\n      },\r\n      tickInterval: 5,\r\n    },\r\n  }\r\n  return (\r\n  <Chart padding=\"auto\" scale={scale} data={data} autoFit filter={[\r\n      ['value', val => val > 0.1]]}>\r\n      {/* <Line shape=\"smooth\" position=\"week*value\" /> */}\r\n      <LineAdvance area shape=\"smooth\" position=\"week*value\" size={2} color=\"blue\" point={{ size: 3 }} />\r\n      <Point position=\"week*value1\" size={0}/>\r\n      {/* <Point position=\"week*value\" stroke=\"blue\"/> */}\r\n      <Axis name=\"week\" title />\r\n      {/* <Tooltip shared showCrosshairs /> */}\r\n      <Tooltip showCrosshairs shared>\r\n        {(title, items) => {\r\n          return <div className=\"tooltip\">Week: {title}<br /><br />Average Invoice Rate: <b style={{ marginLeft: \"15px\" }}>{items[0].data.value}%</b></div>\r\n        }}\r\n      </Tooltip>\r\n      <Slider\r\n        start={0.3}\r\n        padding={[5, 15, 5, 5]}\r\n      />\r\n      <Axis name=\"value1\" position=\"right\"/>\r\n\r\n    </Chart>\r\n\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {\r\n  Chart,\r\n  Tooltip,\r\n  Interval,\r\n  Slider,\r\n  LineAdvance,\r\n  View,\r\n  Axis,\r\n  Legend\r\n\r\n} from \"bizcharts\";\r\n\r\nexport const FinanceChart = ({ data }) => {\r\n\r\n  const scale = {\r\n    value: {\r\n      alias: \"Cummulative\",\r\n      sync: true,\r\n      nice: true,\r\n      formatter: function (val) { return val / 1000 + \"k NOK\"; }\r\n    },\r\n    month: { sync: true }\r\n  }\r\n\r\n  return (\r\n    <Chart padding={[20,80,80,80]} scale={scale} data={data.acc} autoFit interactions={['active-region']} >\r\n      <Tooltip shared />\r\n\r\n      <Interval position=\"month*value\" color=\"rgba(10,10,10,0.2)\"/>\r\n\r\n      <View padding={0} scale={scale} data={data.rest} autoFit>\r\n        <LineAdvance shape=\"smooth\" color={[\"name\", [\"rgb(235, 236, 28)\", \"#6E97D7\"]]} position=\"month*value\" size={2} point={{ size: 3 }} />\r\n\r\n\r\n      </View>\r\n    \r\n\r\n    </Chart>\r\n\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport {\r\n  Chart,\r\n  Tooltip,\r\n  Interval,\r\n  Slider,\r\n  LineAdvance\r\n\r\n} from \"bizcharts\";\r\n\r\nexport const SalesChart = ({ data }) => {\r\n\r\n  const scale = {\r\n    week:{ formatter: function (val){return \"Week \" + val;}}\r\n  }\r\n\r\n  return (\r\n    <Chart padding=\"auto\" scale={scale} data={data} autoFit interactions={['active-region']} >\r\n      <Interval\r\n        adjust={[\r\n          {\r\n            type: 'dodge',\r\n            marginRatio: 0,\r\n          },\r\n        ]}\r\n        color=\"name\"\r\n        position=\"week*value\"\r\n\r\n      />\r\n      <Tooltip shared scale={{week:{ formatter: function (val){return \"Week\" + val;}}}} />\r\n      <Slider start={0.3} padding={[5, 15, 5, 5]} />\r\n\r\n    </Chart>\r\n\r\n  )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport {\r\n  Chart,\r\n  Tooltip,\r\n  Interval,\r\n  Slider,\r\n  Point\r\n\r\n} from \"bizcharts\";\r\n\r\nexport const OffersChart = ({ data }) => {\r\n\r\n  const scale = {\r\n    week: { formatter: function (val) { return \"Week \" + val; } },\r\n    value: { alias: \"Offers sent\", formatter: function (val) { return val / 1000 + \"k NOK\"; } }\r\n\r\n  }\r\n\r\n  return (\r\n    <Chart padding={[0, 0, 80, 65]} scale={scale} data={data} autoFit interactions={['active-region']} >\r\n      <Tooltip shared={true}  />\r\n      <Interval\r\n        adjust={[\r\n          {\r\n            type: 'dodge',\r\n            marginRatio: 0,\r\n          },\r\n        ]}\r\n        color=\"name\"\r\n        position=\"week*value\"\r\n\r\n      />\r\n      {/* <Point position=\"week*value\" /> */}\r\n      {/* <Slider start={0.3} padding={[5, 15, 5, 5]} /> */}\r\n      <Slider\r\n        start={0.3}\r\n        padding={[5, 15, 5, 5]}\r\n      />\r\n    </Chart>\r\n\r\n  )\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\nfunction Clock() {\r\n\r\n  const [date, setDate] = React.useState(new Date());\r\n\r\n  React.useEffect(() => {\r\n    var timerID = setInterval(() => tick(), 1000);\r\n    return function cleanup() {\r\n      clearInterval(timerID);\r\n    };\r\n  });\r\n\r\n  function tick() {\r\n    setDate(new Date());\r\n  }\r\n\r\n  function currentWeek(date) {\r\n    const oneJan = new Date(date.getFullYear(), 0, 1);\r\n    const numberOfDays = Math.floor((date - oneJan) / (24 * 60 * 60 * 1000));\r\n    return Math.ceil((date.getDay() + 1 + numberOfDays) / 7)\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"clock-card clock\">\r\n        <div>\r\n          {\r\n            Intl.DateTimeFormat('en-UK', { hour: \"numeric\", minute: \"numeric\", second: \"numeric\", hour12: false })\r\n              .format(date)\r\n          }</div>\r\n      </div>\r\n      <div className=\"clock-card date-card\">\r\n        <div>\r\n          {\r\n            Intl.DateTimeFormat('en-UK', { weekday: 'long', month: 'long', day: 'numeric', year: 'numeric' })\r\n              .format(date)\r\n          }</div>\r\n        <div>\r\n          Current Week: {currentWeek(date)}\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Clock\r\n","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\n//import config from './config';\r\nimport { BarChart } from './Components/BarChart';\r\nimport { SocialBarChart } from './Components/SocialBarChart';\r\nimport { LineChart } from './Components/LineChart';\r\nimport { FinanceChart } from './Components/FinanceChart';\r\nimport { SalesChart } from './Components/SalesChart';\r\nimport { OffersChart } from './Components/OffersChart';\r\nimport BarLoader from \"react-spinners/PulseLoader\";\r\nimport Clock from './Components/Clock';\r\n\r\n\r\n\r\ndocument.title = \"Yallow Life Science - DashBoard\";\r\n\r\nconst url = `https://sheets.googleapis.com/v4/spreadsheets/1VUxJ_qQwCoPou2nzBn2B-yPmN2ICeHzfT6FQvbMjOL8/values:batchGet?majorDimension=COLUMNS&ranges=Sheet1!D:N&ranges=Sheet1!P:Y&ranges=Sheet1!AB:AF&ranges=Sheet1!B2&ranges=Sheet1!B4&key=AIzaSyAhJlD7G3G5EWwHSQWJA-oiY3rm_9mr2P8`;\r\nconst instaUrl = 'https://www.instagram.com/yallowlifescience/channel/?__a=1';\r\nfunction App() {\r\n  const [sheet, setSheet] = useState({});\r\n  const [overallAvg, setOverallAvg] = useState({});\r\n  const [insta, setInsta] = useState({ foll: 0, posts: 0 });\r\n  const [linked, setLinked] = useState(0);\r\n  const [diffData, setDiffData] = useState(0);\r\n  const [finance, setFinance] = useState(0);\r\n  const [newLastWeek, setNewLastWeek] = useState(0);\r\n  const [sales, setSales] = useState(0);\r\n  const [offers, setOffers] = useState(0);\r\n\r\n\r\n  const fetchFromSheets = () => {\r\n    fetch(url).then(response => response.json()).then(data => {\r\n      const weeksBehind = 25\r\n      // fetch hours\r\n      let datasets = [];\r\n      let overallAvg = [];\r\n      data.valueRanges[1].values[0].forEach((e, i) => {\r\n        // how many weeks behind\r\n        if (i === 0 || i < data.valueRanges[1].values[0].length - weeksBehind) { return }\r\n        for (let l = 1; l < data.valueRanges[1].values.length; l++) {\r\n          // skip the names stated here\r\n          if (data.valueRanges[1].values[l][0] === \"Overall Avg. IR\") {\r\n            overallAvg.push({ week: data.valueRanges[1].values[0][i], name: data.valueRanges[1].values[l][0], value: parseFloat(data.valueRanges[1].values[l][i]), value1: parseFloat(data.valueRanges[1].values[l][i]) })\r\n          }\r\n          else if (data.valueRanges[1].values[l][0] === \"Employee 7\") {\r\n          } else {\r\n            datasets.push({ week: data.valueRanges[1].values[0][i], name: data.valueRanges[1].values[l][0], value: parseFloat(data.valueRanges[1].values[l][i]), avg: parseFloat(data.valueRanges[1].values[l][i]) })\r\n          }\r\n        }\r\n      })\r\n\r\n\r\n      setNewLastWeek({\r\n        instaFoll: data.valueRanges[0].values[1][data.valueRanges[0].values[1].length - 1],\r\n        instaPost: data.valueRanges[0].values[2][data.valueRanges[0].values[2].length - 1],\r\n        linkedFoll: data.valueRanges[0].values[3][data.valueRanges[0].values[3].length - 1],\r\n        linkedPost: data.valueRanges[0].values[4][data.valueRanges[0].values[4].length - 1]\r\n      })\r\n\r\n\r\n      // Finance\r\n      let finance = { rest: [], acc: [] };\r\n      data.valueRanges[2].values[0].forEach((e, i) => {\r\n        // how many weeks behind\r\n        if (i === 0 || i < data.valueRanges[2].values[0].length - weeksBehind) { return }\r\n        for (let l = 1; l < 5; l++) {\r\n          if (l === 2){} \r\n          else if (l === 4){\r\n            finance['acc'].push({\r\n              month: e,\r\n              name: data.valueRanges[2].values[l][0],\r\n              value: parseFloat(data.valueRanges[2].values[l][i]),\r\n            })\r\n          } else {\r\n            finance['rest'].push({\r\n              month: e,\r\n              name: data.valueRanges[2].values[l][0],\r\n              value: parseFloat(data.valueRanges[2].values[l][i]),\r\n\r\n            })\r\n          }\r\n        }\r\n      }\r\n      )\r\n      console.log(finance)\r\n\r\n\r\n      //fetch diff data\r\n      let instaNewFollPosts = []\r\n      data.valueRanges[0].values[0].forEach((e, i) => {\r\n        // how many weeks behind\r\n        if (i === 0 || i < data.valueRanges[1].values[0].length - weeksBehind) { return }\r\n        instaNewFollPosts.push({ \"week\": e, \"value\": parseInt(data.valueRanges[0].values[1][i]), \"name\": \"New Followers\" })\r\n        instaNewFollPosts.push({ \"week\": e, \"value\": parseInt(data.valueRanges[0].values[2][i]), \"name\": \"New Posts\" })\r\n      })\r\n      let linkedNewFollPosts = []\r\n      data.valueRanges[0].values[0].forEach((e, i) => {\r\n        // how many weeks behind\r\n        if (i === 0 || i < data.valueRanges[1].values[0].length - weeksBehind) { return }\r\n        linkedNewFollPosts.push({ \"week\": e, \"value\": parseInt(data.valueRanges[0].values[3][i]), \"name\": \"New Followers\" })\r\n        linkedNewFollPosts.push({ \"week\": e, \"value\": parseInt(data.valueRanges[0].values[4][i]), \"name\": \"New Posts\" })\r\n      })\r\n      let sales = []\r\n      data.valueRanges[0].values[0].forEach((e, i) => {\r\n        // how many weeks behind\r\n        if (i === 0 || i < data.valueRanges[1].values[0].length - weeksBehind) { return }\r\n        sales.push({ \"week\": e, \"value\": parseInt(data.valueRanges[0].values[6][i]), \"name\": \"New Leads\" })\r\n        sales.push({ \"week\": e, \"value\": parseInt(data.valueRanges[0].values[5][i]), \"name\": \"Sales Meetings\" })\r\n        sales.push({ \"week\": e, \"value\": parseInt(data.valueRanges[0].values[7][i]), \"name\": \"Meetings Booked\" })\r\n      })\r\n\r\n      let offers = []\r\n      data.valueRanges[0].values[0].forEach((e, i) => {\r\n        // how many weeks behind\r\n        if (i === 0 || i < data.valueRanges[1].values[0].length - weeksBehind) { return }\r\n        offers.push({ name: \"Offers sent\", \"week\": e, \"value\": parseInt(data.valueRanges[0].values[8][i]) })\r\n        let wins = data.valueRanges[0].values[10][i] ? data.valueRanges[0].values[10][i] : 0\r\n        offers.push({ name: \"Wins\", \"week\": e, \"value\": parseInt(wins) })\r\n      })\r\n\r\n\r\n\r\n      console.log(offers)\r\n      setOffers(offers)\r\n      setSales(sales);\r\n      setFinance(finance);\r\n      setDiffData({ instaNewFollPosts, linkedNewFollPosts })\r\n      setLinked({ foll: data.valueRanges[3].values[0], posts: data.valueRanges[4].values[0] })\r\n      setSheet(datasets)\r\n      setOverallAvg(overallAvg)\r\n    })\r\n  }\r\n\r\n  const fetchFromInstagram = () => {\r\n    fetch(instaUrl).then(response => response.json()).then(data => {\r\n      setInsta({ foll: data.graphql.user.edge_followed_by.count, posts: data.graphql.user.edge_owner_to_timeline_media.count });\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    fetchFromSheets();\r\n    fetchFromInstagram();\r\n    const interval = setInterval(() => {\r\n      fetchFromSheets();\r\n      fetchFromInstagram();\r\n    }, 300000);\r\n\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"card-wrapper\">\r\n      <div className=\"header-row\">\r\n      <div className=\"clock-card logo\">\r\n\r\n      </div>\r\n        <Clock />\r\n      </div>\r\n      <div className=\"second-row\">\r\n        <div className=\"card-small-plus\">\r\n          <div className=\"card-title\">\r\n            Instagram New Followers and Posts\r\n          </div>\r\n          <div className=\"chart-box\">\r\n            {diffData.instaNewFollPosts ? <SocialBarChart data={diffData.instaNewFollPosts} />\r\n              : <BarLoader color=\"darkgrey\" size={20} />}\r\n          </div>\r\n        </div>\r\n        <div className=\"first-row\">\r\n          <div className=\"card-small\">\r\n            <div className=\"card-title\">Instagram Followers:</div>\r\n            <div className=\"card-value\">{insta.foll ? insta.foll + ` (${newLastWeek.instaFoll})` : <BarLoader color=\"darkgrey\" size={12} />}</div>\r\n          </div>\r\n          <div className=\"card-small\">\r\n            <div className=\"card-title\">Instagram Posts:</div>\r\n            <div className=\"card-value\">{insta.posts ? insta.posts : <BarLoader color=\"darkgrey\" size={12} />}</div>\r\n          </div>        </div>        <div className=\"first-row\">\r\n\r\n\r\n          <div className=\"card-small\">\r\n            <div className=\"card-title\">LinkedIn Followers:</div>\r\n            <div className=\"card-value\">{linked.foll ? linked.foll + ` (${newLastWeek.linkedFoll})` : <BarLoader color=\"darkgrey\" size={12} />}</div>\r\n          </div>\r\n          <div className=\"card-small\">\r\n            <div className=\"card-title\">LinkedIn Posts:</div>\r\n            <div className=\"card-value\">{linked.posts ? linked.posts : <BarLoader color=\"darkgrey\" size={12} />}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-small-plus\">\r\n          <div className=\"card-title\">\r\n            LinkedIn New Followers and Posts\r\n          </div>\r\n          <div className=\"chart-box\">\r\n            {diffData.linkedNewFollPosts ? <SocialBarChart data={diffData.linkedNewFollPosts} />\r\n              : <BarLoader color=\"darkgrey\" size={20} />}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n      <div className=\"third-row\">\r\n        <div className=\"card-big\">\r\n          <div className=\"card-title\">\r\n            Invoice Rate\r\n          </div>\r\n          <div className=\"chart-box\">\r\n            {sheet[1] ? <BarChart data={sheet} /> : <BarLoader color=\"darkgrey\" size={20} />}\r\n          </div>\r\n        </div>\r\n        <div className=\"card-medium\">\r\n          <div className=\"card-title\">\r\n            Overall Average Invoice Rate\r\n          </div>\r\n          <div className=\"chart-box\">\r\n            {overallAvg[1] ? <LineChart data={overallAvg} />\r\n              : <BarLoader color=\"darkgrey\" size={20} />}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n      <div className=\"fourth-row\">\r\n        <div className=\"card-small-plus\">\r\n          <div className=\"card-title\">\r\n            Finance\r\n          </div>\r\n          <div className=\"chart-box\">\r\n            {finance.acc ? <FinanceChart data={finance} />\r\n              : <BarLoader color=\"darkgrey\" size={20} />}\r\n          </div>\r\n        </div>\r\n        <div className=\"card-small-plus\">\r\n          <div className=\"card-title\">\r\n            Sales\r\n          </div>\r\n          <div className=\"chart-box\">\r\n            {finance.acc ? <SalesChart data={sales} />\r\n              : <BarLoader color=\"darkgrey\" size={20} />}\r\n          </div>\r\n        </div>\r\n        <div className=\"card-small-plus\">\r\n          <div className=\"card-title\">\r\n            Offers\r\n          </div>\r\n          <div className=\"chart-box\">\r\n            {finance.acc ? <OffersChart data={offers} />\r\n              : <BarLoader color=\"darkgrey\" size={20} />}\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}