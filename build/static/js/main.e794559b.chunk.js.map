{"version":3,"sources":["Components/BarChart.jsx","Components/SocialBarChart.jsx","Components/LineChart.jsx","Components/FinanceChart.jsx","App.js","reportWebVitals.js","index.js"],"names":["BarChart","data","padding","scale","value","formatter","val","avg","week","autoFit","interactions","filter","adjust","type","marginRatio","color","position","shared","start","SocialBarChart","LineChart","alias","max","tickInterval","area","shape","size","point","name","title","showCrosshairs","items","className","style","marginLeft","FinanceChart","document","App","useState","sheet","setSheet","overallAvg","setOverallAvg","foll","posts","insta","setInsta","linked","setLinked","diffData","setDiffData","finance","setFinance","newLastWeek","setNewLastWeek","fetchFromSheets","fetch","then","response","json","datasets","valueRanges","values","forEach","e","i","length","l","push","parseFloat","instaFoll","instaPost","linkedFoll","linkedPost","month","console","log","instaNewFollPosts","parseInt","linkedNewFollPosts","fetchFromInstagram","graphql","user","edge_followed_by","count","edge_owner_to_timeline_media","useEffect","interval","setInterval","clearInterval","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e794559b.chunk.js","sourcesContent":["import React from 'react'\r\nimport {\r\n  Chart,\r\n  Tooltip,\r\n  Interval,\r\n  Slider,\r\n  LineAdvance\r\n\r\n} from \"bizcharts\";\r\n\r\nexport const BarChart = ({ data }) => {\r\n\r\n  const scale = {\r\n    value: {\r\n      formatter: function (val) {\r\n        return val + \"%\";\r\n      }\r\n    },\r\n    avg: {\r\n      formatter: function (val) {\r\n        return val + \"%\";\r\n      }\r\n    },\r\n    week:{ formatter: function (val){return \"Week \" + val;}}\r\n  }\r\n\r\n  return (\r\n    <Chart padding=\"auto\" scale={scale} data={data} autoFit interactions={['active-region']} filter={[\r\n      ['value', val => val > 0.1]]} >\r\n      <Interval\r\n        adjust={[\r\n          {\r\n            type: 'dodge',\r\n            marginRatio: 0,\r\n          },\r\n        ]}\r\n        color=\"name\"\r\n        position=\"week*value\"\r\n\r\n      />\r\n      <Tooltip shared scale={{week:{ formatter: function (val){return \"Week\" + val;}}}} />\r\n      <Slider start={0.3} padding={[5, 5, 5, 5]} />\r\n\r\n    </Chart>\r\n\r\n  )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport {\r\n  Chart,\r\n  Tooltip,\r\n  Interval,\r\n  Slider,\r\n} from \"bizcharts\";\r\n\r\nexport const SocialBarChart = ({ data }) => {\r\n\r\n\r\n  return (\r\n    <Chart padding=\"auto\" data={data} autoFit interactions={['active-region']} >\r\n      <Interval\r\n        adjust={[\r\n          {\r\n            type: 'dodge',\r\n            marginRatio: 0,\r\n          },\r\n        ]}\r\n        color=\"name\"\r\n        position=\"week*value\"\r\n\r\n      />\r\n      <Tooltip shared scale={{week:{ formatter: function (val){return \"Week\" + val;}}}} />\r\n      <Slider start={0.5} padding={[5, 5, 5, 5]} />\r\n\r\n    </Chart>\r\n\r\n  )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport {\r\n  Chart,\r\n  Tooltip,\r\n  Axis,\r\n  Slider,\r\n  LineAdvance\r\n} from \"bizcharts\";\r\n\r\nexport const LineChart = ({ data }) => {\r\n\r\n  const scale = {\r\n    value: {\r\n      alias: \"Average IR\",\r\n      max: 80, \r\n      formatter: function (val) {\r\n        return val + \"%\";\r\n      },\r\n      tickInterval: 5,\r\n    }\r\n  }\r\n  return (\r\n    <Chart padding=\"auto\" scale={scale} data={data} autoFit filter={[\r\n      ['value', val => val > 0.1]]}>\r\n      {/* <Line shape=\"smooth\" position=\"week*value\" /> */}\r\n      <LineAdvance area shape=\"smooth\" position=\"week*value\" size={2} color=\"blue\" point={{size:3}}/>\r\n      {/* <Point position=\"week*value\" stroke=\"blue\"/> */}\r\n      <Axis name=\"week\" title />\r\n      {/* <Tooltip shared showCrosshairs /> */}\r\n      <Tooltip showCrosshairs shared>\r\n    {(title,items) => {\r\n      return <div className=\"tooltip\">Week: {title}<br/><br/>Average Invoice Rate: <b style={{marginLeft: \"15px\"}}>{items[0].data.value}%</b></div>\r\n    }}\r\n  </Tooltip>\r\n      <Slider\r\n\t\t\t\tstart={0.3}\r\n\t\t\t\tpadding={[20, 10, 10, 10]}\r\n\t\t\t/>\r\n    </Chart>\r\n\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {\r\n  Chart,\r\n  Tooltip,\r\n  Interval,\r\n  Slider,\r\n\r\n} from \"bizcharts\";\r\n\r\nexport const FinanceChart = ({ data }) => {\r\n\r\n  const scale = {\r\n\r\n  }\r\n\r\n  return (\r\n    <Chart padding=\"auto\" scale={scale} data={data} autoFit interactions={['active-region']} >\r\n      <Interval\r\n        adjust={[\r\n          {\r\n            type: 'dodge',\r\n            marginRatio: 0,\r\n          },\r\n        ]}\r\n        color=\"name\"\r\n        position=\"month*value\"\r\n\r\n      />\r\n      <Tooltip shared />\r\n    </Chart>\r\n\r\n  )\r\n}\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\n//import config from './config';\r\nimport { BarChart } from './Components/BarChart';\r\nimport { SocialBarChart } from './Components/SocialBarChart';\r\nimport { LineChart } from './Components/LineChart';\r\nimport { FinanceChart } from './Components/FinanceChart';\r\nimport BarLoader from \"react-spinners/PulseLoader\";\r\n\r\n\r\n\r\ndocument.title = \"Yallow Life Science - DashBoard\";\r\n\r\nconst url = `https://sheets.googleapis.com/v4/spreadsheets/1VUxJ_qQwCoPou2nzBn2B-yPmN2ICeHzfT6FQvbMjOL8/values:batchGet?majorDimension=COLUMNS&ranges=Sheet1!D:N&ranges=Sheet1!P:Y&ranges=Sheet1!AB:AF&ranges=Sheet1!B2&ranges=Sheet1!B4&key=AIzaSyAhJlD7G3G5EWwHSQWJA-oiY3rm_9mr2P8`;\r\nconst instaUrl = 'https://www.instagram.com/yallowlifescience/channel/?__a=1';\r\nfunction App() {\r\n  const [sheet, setSheet] = useState({});\r\n  const [overallAvg, setOverallAvg] = useState({});\r\n  const [insta, setInsta] = useState({ foll: 0, posts: 0 });\r\n  const [linked, setLinked] = useState(0);\r\n  const [diffData, setDiffData] = useState(0);\r\n  const [finance, setFinance] = useState(0);\r\n  const [newLastWeek, setNewLastWeek] = useState(0);\r\n\r\n\r\n  const fetchFromSheets = () => {\r\n    fetch(url).then(response => response.json()).then(data => {\r\n      const weeksBehind = 25\r\n      // fetch hours\r\n      let datasets = [];\r\n      let overallAvg = [];\r\n      data.valueRanges[1].values[0].forEach((e, i) => {\r\n        // how many weeks behind\r\n        if (i === 0 || i < data.valueRanges[1].values[0].length - weeksBehind) { return }\r\n        for (let l = 1; l < data.valueRanges[1].values.length; l++) {\r\n          // skip the names stated here\r\n          if (data.valueRanges[1].values[l][0] === \"Overall Avg. IR\") {\r\n            overallAvg.push({ week: data.valueRanges[1].values[0][i], name: data.valueRanges[1].values[l][0], value: parseFloat(data.valueRanges[1].values[l][i]) })\r\n          }\r\n          else if (data.valueRanges[1].values[l][0] === \"Employee 7\" || data.valueRanges[1].values[l][0] === \"Kamila\") {\r\n          } else {\r\n            datasets.push({ week: data.valueRanges[1].values[0][i], name: data.valueRanges[1].values[l][0], value: parseFloat(data.valueRanges[1].values[l][i]), avg: parseFloat(data.valueRanges[1].values[l][i]) })\r\n          }\r\n        }\r\n      })\r\n\r\n\r\n      setNewLastWeek({\r\n        instaFoll: data.valueRanges[0].values[1][data.valueRanges[0].values[1].length - 1],\r\n        instaPost: data.valueRanges[0].values[2][data.valueRanges[0].values[2].length - 1],\r\n        linkedFoll: data.valueRanges[0].values[3][data.valueRanges[0].values[3].length - 1],\r\n        linkedPost: data.valueRanges[0].values[4][data.valueRanges[0].values[4].length - 1]\r\n      })\r\n\r\n\r\n      // Finance\r\n      let finance = [];\r\n      data.valueRanges[2].values[0].forEach((e, i) => {\r\n        // how many weeks behind\r\n        if (i === 0 || i < data.valueRanges[2].values[0].length - weeksBehind) { return }\r\n        for (let l = 1; l < data.valueRanges[2].values.length; l++) {\r\n          finance.push({ month: data.valueRanges[2].values[0][i], name: data.valueRanges[2].values[l][0], value: parseFloat(data.valueRanges[2].values[l][i]) })\r\n        }\r\n      })\r\n      console.log(finance)\r\n\r\n      //fetch diff data\r\n      let instaNewFollPosts = []\r\n      data.valueRanges[0].values[0].forEach((e, i) => {\r\n        // how many weeks behind\r\n        if (i === 0 || i < data.valueRanges[1].values[0].length - weeksBehind) { return }\r\n        instaNewFollPosts.push({ \"week\": e, \"value\": parseInt(data.valueRanges[0].values[1][i]), \"name\": \"New Followers\" })\r\n        instaNewFollPosts.push({ \"week\": e, \"value\": parseInt(data.valueRanges[0].values[2][i]), \"name\": \"New Posts\" })\r\n      })\r\n      let linkedNewFollPosts = []\r\n      data.valueRanges[0].values[0].forEach((e, i) => {\r\n        // how many weeks behind\r\n        if (i === 0 || i < data.valueRanges[1].values[0].length - weeksBehind) { return }\r\n        linkedNewFollPosts.push({ \"week\": e, \"value\": parseInt(data.valueRanges[0].values[3][i]), \"name\": \"New Followers\" })\r\n        linkedNewFollPosts.push({ \"week\": e, \"value\": parseInt(data.valueRanges[0].values[4][i]), \"name\": \"New Posts\" })\r\n      })\r\n\r\n      setFinance(finance);\r\n      setDiffData({ instaNewFollPosts, linkedNewFollPosts })\r\n      setLinked({ foll: data.valueRanges[3].values[0], posts: data.valueRanges[4].values[0] })\r\n      setSheet(datasets)\r\n      setOverallAvg(overallAvg)\r\n    })\r\n  }\r\n\r\n  const fetchFromInstagram = () => {\r\n    fetch(instaUrl).then(response => response.json()).then(data => {\r\n      setInsta({ foll: data.graphql.user.edge_followed_by.count, posts: data.graphql.user.edge_owner_to_timeline_media.count });\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    fetchFromSheets();\r\n    fetchFromInstagram();\r\n    const interval = setInterval(() => {\r\n      fetchFromSheets();\r\n      fetchFromInstagram();\r\n    }, 300000);\r\n\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"card-wrapper\">\r\n      <div className=\"first-row\">\r\n        <div className=\"card-small\">\r\n          <div className=\"card-title\">Instagram Followers:</div>\r\n          <div className=\"card-value\">{insta.foll ? insta.foll + ` (${newLastWeek.instaFoll})` : <BarLoader color=\"darkgrey\" size={12} />}</div>\r\n        </div>\r\n        <div className=\"card-small\">\r\n          <div className=\"card-title\">Instagram Posts:</div>\r\n          <div className=\"card-value\">{insta.posts ? insta.posts : <BarLoader color=\"darkgrey\" size={12} />}</div>\r\n        </div>\r\n        <div className=\"card-small\">\r\n          <div className=\"card-title\">LinkedIn Followers:</div>\r\n          <div className=\"card-value\">{linked.foll ? linked.foll : <BarLoader color=\"darkgrey\" size={12} />}</div>\r\n        </div>\r\n        <div className=\"card-small\">\r\n          <div className=\"card-title\">LinkedIn Posts:</div>\r\n          <div className=\"card-value\">{linked.posts ? linked.posts + ` (${newLastWeek.linkedPost})`: <BarLoader color=\"darkgrey\" size={12} />}</div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n      <div className=\"second-row\">\r\n        <div className=\"card-small-plus\">\r\n          <div className=\"card-title\">\r\n            Instagram New Followers and Posts\r\n          </div>\r\n          <div className=\"chart-box\">\r\n            {diffData.instaNewFollPosts ? <SocialBarChart data={diffData.instaNewFollPosts} />\r\n              : <BarLoader color=\"darkgrey\" size={20} />}\r\n          </div>\r\n        </div>\r\n        <div className=\"card-small-plus\">\r\n          <div className=\"card-title\">\r\n            LinkedIn New Followers and Posts\r\n          </div>\r\n          <div className=\"chart-box\">\r\n            {diffData.linkedNewFollPosts ? <SocialBarChart data={diffData.linkedNewFollPosts} />\r\n              : <BarLoader color=\"darkgrey\" size={20} />}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n      <div className=\"third-row\">\r\n        <div className=\"card-big\">\r\n          <div className=\"card-title\">\r\n            Invoice Rate\r\n          </div>\r\n          <div className=\"chart-box\">\r\n            {sheet[1] ? <BarChart data={sheet} /> : <BarLoader color=\"darkgrey\" size={20} />}\r\n          </div>\r\n        </div>\r\n        <div className=\"card-medium\">\r\n          <div className=\"card-title\">\r\n            Overall Average Invoice Rate\r\n          </div>\r\n          <div className=\"chart-box\">\r\n            {overallAvg[1] ? <LineChart data={overallAvg} />\r\n              : <BarLoader color=\"darkgrey\" size={20} />}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n      <div className=\"fourth-row\">\r\n        <div className=\"card-small-plus\">\r\n          <div className=\"card-title\">\r\n            Finance\r\n          </div>\r\n          <div className=\"chart-box\">\r\n            {finance[1] ? <FinanceChart data={finance} />\r\n              : <BarLoader color=\"darkgrey\" size={20} />}\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}